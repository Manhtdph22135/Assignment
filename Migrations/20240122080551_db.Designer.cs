// <auto-generated />
using System;
using Assignment.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assignment.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240122080551_db")]
    partial class db
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Assignment.Models.GioHang", b =>
                {
                    b.Property<Guid>("IDGioHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDGioHang");

                    b.ToTable("GioHangs");
                });

            modelBuilder.Entity("Assignment.Models.GioHangCT", b =>
                {
                    b.Property<Guid>("IDGHCT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("IDGioHang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDKhachHang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("IDGHCT");

                    b.HasIndex("IDGioHang");

                    b.HasIndex("IDKhachHang");

                    b.HasIndex("IdSP");

                    b.ToTable("GioHangCTs");
                });

            modelBuilder.Entity("Assignment.Models.HoaDon", b =>
                {
                    b.Property<Guid>("IdBill")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("IdBill");

                    b.ToTable("HoaDons");
                });

            modelBuilder.Entity("Assignment.Models.HoaDonCT", b =>
                {
                    b.Property<Guid>("IDHDCT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChiNguoiNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IDKhachHang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdBill")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaHD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayNhan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayShip")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("SDTNguoiNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenNguoiNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TongThanhToan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IDHDCT");

                    b.HasIndex("IDKhachHang");

                    b.HasIndex("IdBill");

                    b.HasIndex("IdSP");

                    b.ToTable("HoaDonCTs");
                });

            modelBuilder.Entity("Assignment.Models.KhachHang", b =>
                {
                    b.Property<Guid>("IDKhachHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IDKhachHang");

                    b.ToTable("KhachHangs");
                });

            modelBuilder.Entity("Assignment.Models.SanPham", b =>
                {
                    b.Property<Guid>("IdSP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenSP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSP");

                    b.ToTable("SanPhams");
                });

            modelBuilder.Entity("Assignment.Models.SanPhamCT", b =>
                {
                    b.Property<Guid>("IDSPCT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Anh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GiaSale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("IDGioHang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDSP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdBill")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IDSPCT");

                    b.HasIndex("IDGioHang");

                    b.HasIndex("IDSP");

                    b.HasIndex("IdBill");

                    b.ToTable("SanPhamCTs");
                });

            modelBuilder.Entity("Assignment.Models.GioHangCT", b =>
                {
                    b.HasOne("Assignment.Models.GioHang", "GioHang")
                        .WithMany("GioHangcts")
                        .HasForeignKey("IDGioHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment.Models.KhachHang", "KhachHang")
                        .WithMany("GioHangCTs")
                        .HasForeignKey("IDKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment.Models.SanPham", "SanPham")
                        .WithMany("GioHangCT")
                        .HasForeignKey("IdSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GioHang");

                    b.Navigation("KhachHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("Assignment.Models.HoaDonCT", b =>
                {
                    b.HasOne("Assignment.Models.KhachHang", "KhachHang")
                        .WithMany("HoaDonCTs")
                        .HasForeignKey("IDKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment.Models.HoaDon", "HoaDon")
                        .WithMany("HoaDonCTs")
                        .HasForeignKey("IdBill")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment.Models.SanPham", "SanPham")
                        .WithMany("HoaDonCT")
                        .HasForeignKey("IdSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("KhachHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("Assignment.Models.SanPhamCT", b =>
                {
                    b.HasOne("Assignment.Models.GioHang", "GioHang")
                        .WithMany("SanPhamCTs")
                        .HasForeignKey("IDGioHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment.Models.SanPham", "SanPham")
                        .WithMany("SanPhamCT")
                        .HasForeignKey("IDSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment.Models.HoaDon", "HoaDon")
                        .WithMany("SanPhamct")
                        .HasForeignKey("IdBill")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GioHang");

                    b.Navigation("HoaDon");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("Assignment.Models.GioHang", b =>
                {
                    b.Navigation("GioHangcts");

                    b.Navigation("SanPhamCTs");
                });

            modelBuilder.Entity("Assignment.Models.HoaDon", b =>
                {
                    b.Navigation("HoaDonCTs");

                    b.Navigation("SanPhamct");
                });

            modelBuilder.Entity("Assignment.Models.KhachHang", b =>
                {
                    b.Navigation("GioHangCTs");

                    b.Navigation("HoaDonCTs");
                });

            modelBuilder.Entity("Assignment.Models.SanPham", b =>
                {
                    b.Navigation("GioHangCT");

                    b.Navigation("HoaDonCT");

                    b.Navigation("SanPhamCT");
                });
#pragma warning restore 612, 618
        }
    }
}
